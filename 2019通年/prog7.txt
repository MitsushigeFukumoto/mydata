//
//  main.c
//  prog7
//
//  Created by Mitsushige Fukumoto on 2019/11/28.
//  Copyright Â© 2019 AIT. All rights reserved.
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
typedef struct iris{
    double sepal_length;
    double sepal_width;
    double petal_length;
    double petal_width;
    char class[30];
}Iris;

int main(int argc, const char * argv[]) {
    FILE *fp;
    fp=fopen("iris.data","r");
    if(fp==NULL){
        printf("Cannot open the file.");
        exit(0);
    }
    char line[50];
    Iris iris;
    Iris list[150];
    
    double s_sepal_length=0,s_sepal_width=0,s_petal_length=0,s_petal_width=0;
    double avg_s_sepal_length=0,avg_s_sepal_width=0,avg_s_petal_length=0,avg_s_petal_width=0;
    
    double ve_sepal_length=0,ve_sepal_width=0,ve_petal_length=0,ve_petal_width=0;
    double avg_ve_sepal_length=0,avg_ve_sepal_width=0,avg_ve_petal_length=0,avg_ve_petal_width=0;
    
    double vi_sepal_length=0,vi_sepal_width=0,vi_petal_length=0,vi_petal_width=0;
    double avg_vi_sepal_length=0,avg_vi_sepal_width=0,avg_vi_petal_length=0,avg_vi_petal_width=0;
    
    int s_count=0,ve_count=0,vi_count=0;
    int num=0;
    
    while(fgets(line, 50, fp) != NULL){
        iris.sepal_length=atof(strtok(line,",\n"));
        iris.sepal_width=atof(strtok(NULL,",\n"));
        iris.petal_length=atof(strtok(NULL,",\n"));
        iris.petal_width=atof(strtok(NULL,",\n"));
        strcpy(iris.class, strtok(NULL,",\n"));
        list[num]=iris;
        num++;
    }
    for(int i=0;i<=150;i++){
        if(strcmp(list[i].class,"Iris-setosa")==0){
            s_sepal_length+=list[i].sepal_length;
            s_sepal_width+=list[i].sepal_width;
            s_petal_length+=list[i].petal_length;
            s_petal_width+=list[i].petal_width;
            s_count++;
        }
    }
    for(int i=0;i<=150;i++){
        if(strcmp(list[i].class,"Iris-versicolor")==0){
            ve_sepal_length+=list[i].sepal_length;
            ve_sepal_width+=list[i].sepal_width;
            ve_petal_length+=list[i].petal_length;
            ve_petal_width+=list[i].petal_width;
            ve_count++;
        }
    }
    for(int i=0;i<=150;i++){
        if(strcmp(list[i].class,"Iris-virginica")==0){
            vi_sepal_length+=list[i].sepal_length;
            vi_sepal_width+=list[i].sepal_width;
            vi_petal_length+=list[i].petal_length;
            vi_petal_width+=list[i].petal_width;
            vi_count++;
        }
    }

    
    avg_s_sepal_length=s_sepal_length/s_count;
    avg_s_sepal_width=s_sepal_width/s_count;
    avg_s_petal_length=s_petal_length/s_count;
    avg_s_petal_width=s_petal_width/s_count;
    
    avg_ve_sepal_length=ve_sepal_length/ve_count;
    avg_ve_sepal_width=ve_sepal_width/ve_count;
    avg_ve_petal_length=ve_petal_length/ve_count;
    avg_ve_petal_width=ve_petal_width/ve_count;
    
    avg_vi_sepal_length=vi_sepal_length/vi_count;
    avg_vi_sepal_width=vi_sepal_width/vi_count;
    avg_vi_petal_length=vi_petal_length/vi_count;
    avg_vi_petal_width=vi_petal_width/vi_count;
    
    double sum_s=fabs(5.7-avg_s_sepal_length)+fabs(4.0-avg_s_sepal_width)+fabs(1.2-avg_s_petal_length)+fabs(0.2-avg_s_petal_width);
    double sum_ve=fabs(5.7-avg_ve_sepal_length)+fabs(4.0-avg_ve_sepal_width)+fabs(1.2-avg_ve_petal_length)+fabs(0.2-avg_ve_petal_width);
    double sum_vi=fabs(5.7-avg_vi_sepal_length)+fabs(4.0-avg_vi_sepal_width)+fabs(1.2-avg_vi_petal_length)+fabs(0.2-avg_vi_petal_width);
    5.7,4.0,1.2,0.2;
    if((sum_s<sum_ve)&&(sum_s<sum_vi)){
        printf("1: s\n");
    }if((sum_ve<sum_s)&&(sum_ve<sum_vi)){
        printf("1: ve\n");
    }if((sum_vi<sum_ve)&&(sum_vi<sum_s)){
        printf("1: vi\n");
    }
    
    sum_s=fabs(5.9-avg_s_sepal_length)+fabs(2.9-avg_s_sepal_width)+fabs(4.2-avg_s_petal_length)+fabs(1.5-avg_s_petal_width);
    sum_ve=fabs(5.9-avg_ve_sepal_length)+fabs(2.9-avg_ve_sepal_width)+fabs(4.2-avg_ve_petal_length)+fabs(1.5-avg_ve_petal_width);
    sum_vi=fabs(5.9-avg_vi_sepal_length)+fabs(2.9-avg_vi_sepal_width)+fabs(4.2-avg_vi_petal_length)+fabs(1.5-avg_vi_petal_width);
    5.9,2.9,4.2,1.5;
    if((sum_s<sum_ve)&&(sum_s<sum_vi)){
        printf("1: s\n");
    }if((sum_ve<sum_s)&&(sum_ve<sum_vi)){
        printf("1: ve\n");
    }if((sum_vi<sum_ve)&&(sum_vi<sum_s)){
        printf("1: vi\n");
    }
    
    sum_s=fabs(5.6-avg_s_sepal_length)+fabs(2.8-avg_s_sepal_width)+fabs(4.8-avg_s_petal_length)+fabs(2.0-avg_s_petal_width);
    sum_ve=fabs(5.6-avg_ve_sepal_length)+fabs(2.8-avg_ve_sepal_width)+fabs(4.8-avg_ve_petal_length)+fabs(2.0-avg_ve_petal_width);
    sum_vi=fabs(5.6-avg_vi_sepal_length)+fabs(2.8-avg_vi_sepal_width)+fabs(4.8-avg_vi_petal_length)+fabs(2.0-avg_vi_petal_width);
    5.6,2.8,4.8,2.0;
    if((sum_s<sum_ve)&&(sum_s<sum_vi)){
        printf("1: s\n");
    }else if((sum_ve<sum_s)&&(sum_ve<sum_vi)){
        printf("1: ve\n");
    }else if((sum_vi<sum_ve)&&(sum_vi<sum_s)){
        printf("1: vi\n");
    }
    
    printf("Iris-setosa(avg)\n");
    printf("sepal_length:%f\n",s_sepal_length/s_count);
    printf("sepal_width:%f\n",s_sepal_width/s_count);
    printf("petal_length:%f\n",s_petal_length/s_count);
    printf("petal_width:%f\n",s_petal_width/s_count);
    printf("\n");
    printf("Iris-versicolor(avg)\n");
    printf("sepal_length:%f\n",ve_sepal_length/ve_count);
    printf("sepal_width:%f\n",ve_sepal_width/ve_count);
    printf("petal_length:%f\n",ve_petal_length/ve_count);
    printf("petal_width:%f\n",ve_petal_width/ve_count);
    printf("\n");
    printf("Iris-virginica(avg)\n");
    printf("sepal_length:%f\n",vi_sepal_length/vi_count);
    printf("sepal_width:%f\n",vi_sepal_width/vi_count);
    printf("petal_length:%f\n",vi_petal_length/vi_count);
    printf("petal_width:%f\n",vi_petal_width/vi_count);
    
    fclose(fp);
    return 0;
}
